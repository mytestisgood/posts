{
  "root": true,
  "ignorePatterns": [],
  "plugins": ["@typescript-eslint", "rxjs", "eslint-plugin-prettier", "change-detection-strategy"],
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": ["./tsconfig.json"]
  },
  "parser": "@typescript-eslint/parser",
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "smarti",
            "style": "camelCase"
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "smarti",
            "style": "kebab-case"
          }
        ],
        "@typescript-eslint/no-base-to-string": "error",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowTypedFunctionExpressions": true,
            "allowHigherOrderFunctions": true,
            "allowDirectConstAssertionInArrowFunctions": true,
            "allowConciseArrowFunctionExpressionsStartingWithVoid": true
          }
        ],
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "accessors": "explicit",
              "constructors": "off",
              "methods": "explicit",
              "properties": "explicit",
              "parameterProperties": "explicit"
            }
          }
        ],
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "warn",
        "@typescript-eslint/prefer-optional-chain": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/explicit-module-boundary-types": "error",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-empty-function": "warn",
        "object-shorthand": ["error", "always"],
        "no-console": "warn",
        "curly": "error",
        "quotes": [
          "error",
          "single",
          {
            "allowTemplateLiterals": true
          }
        ],
        "no-duplicate-imports": "error",
        "no-else-return": "warn",
        "multiline-ternary": ["error", "always-multiline"],
        "no-case-declarations": "warn",
        "newline-after-var": ["warn", "always"],
        "dot-notation": "off",
        "@typescript-eslint/dot-notation": ["warn"],
        "space-before-blocks": "error",
        "space-in-parens": ["error", "never"],
        "object-curly-spacing": ["error", "always"],
        "comma-spacing": [
          "error",
          {
            "before": false,
            "after": true
          }
        ],
        "key-spacing": [
          "error",
          {
            "beforeColon": false
          }
        ],
        "eqeqeq": ["error", "always"],
        "@typescript-eslint/semi": ["error"],
        "semi": "off",
        "comma-dangle": ["error", "always-multiline"],
        "no-param-reassign": "error",
        "default-param-last": "error",
        "arrow-spacing": "error",
        "prefer-arrow-callback": "error",
        "space-infix-ops": "error",
        "no-whitespace-before-property": "error",
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1,
            "maxEOF": 0
          }
        ],
        "quote-props": ["off"],
        "@typescript-eslint/naming-convention": [
          "error",
          {
            "selector": "default",
            "format": ["camelCase", "strictCamelCase", "PascalCase", "StrictPascalCase", "snake_case", "UPPER_CASE"]
          },
          {
            "selector": "variable",
            "format": ["camelCase"]
          },
          {
            "selector": "variable",
            "modifiers": ["const"],
            "format": ["UPPER_CASE", "camelCase", "PascalCase"]
          },
          {
            "selector": "variable",
            "types": ["boolean"],
            "format": ["PascalCase"],
            "prefix": ["is", "should", "has", "can", "did", "will"]
          },
          {
            "selector": "typeLike",
            "format": ["PascalCase"]
          },
          {
            "selector": "enumMember",
            "format": ["UPPER_CASE", "PascalCase"]
          }
        ],
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "memberTypes": [
                "public-decorated-field",
                "public-decorated-method",
                "public-decorated-set",
                "protected-decorated-field",
                "protected-decorated-method",
                "protected-decorated-set",
                "private-decorated-field",
                "private-decorated-method",
                "private-decorated-set",
                "public-decorated-get",
                "protected-decorated-get",
                "private-decorated-get",
                "public-field",
                "protected-field",
                "private-field",
                "constructor",
                "public-get",
                "public-method",
                "protected-get",
                "protected-method",
                "private-get",
                "private-method"
              ],
              "order": "as-written"
            }
          }
        ],
        "max-len": [
          "warn",
          {
            "code": 120
          }
        ],
        "rxjs/no-async-subscribe": "error",
        "rxjs/no-create": "error",
        "rxjs/no-ignored-replay-buffer": "error",
        "rxjs/no-index": "error",
        "rxjs/no-internal": "error",
        "rxjs/no-nested-subscribe": "error",
        "rxjs/no-subject-unsubscribe": "error",
        "rxjs/no-unsafe-subject-next": "error",
        "rxjs/no-unsafe-takeuntil": "error"
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {
        "@angular-eslint/template/no-any": "warn"
      }
    },
    {
      "files": ["*.component.ts"],
      "rules": {
        "change-detection-strategy/on-push": "warn"
      },
      "extends": ["plugin:@angular-eslint/template/process-inline-templates"]
    },
    {
      "files": ["*.html"],
      "plugins": ["prettier"],
      "rules": {
        "prettier/prettier": "error",
        "@angular-eslint/template/i18n": [
          "off",
          {
            "checkText": true,
            "checkId": false,
            "checkAttributes": false
          }
        ]
      }
    }
  ]
}
